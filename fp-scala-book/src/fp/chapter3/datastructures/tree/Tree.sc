import fp.chapter3.datastructures.tree.{Branch, Leaf, Tree}
import fp.chapter3.datastructures.tree.Tree._

println("**************************************************")
println("******** Tree size ********")
println(size(Branch(Leaf(1), Leaf(2))))
println("******** Tree max ********")
println(max(Branch(Leaf(-21), Branch(Leaf(-99), Leaf(-2)))))
println("**************************************************")
println("******** Tree depth ********")
println(depth(Leaf(1)))
println(depth(Branch(Leaf(1), Leaf(2))))
println(depth(Branch(Leaf(-21), Branch(Leaf(-99), Branch(Leaf(2), Leaf(4))))))
println("**************************************************")
println("******** Tree map ********")
val tree1 = Branch(Leaf(2), Branch(Leaf(9), Branch(Leaf(12), Leaf(4))))
println(map(tree1)(a => a + 2))
println("**************************************************")
println("******** Tree fold ********")
val tree2 = Branch(Leaf(2), Branch(Leaf(3), Leaf(5)))
println(fold(tree2)(a => a)((b1, b2) => b1 + b2))
val tree3 = Branch(Leaf(2), Branch(Leaf(3), Leaf(5)))
println(fold(tree2)(a => a)((b1, b2) => b1 - b2))
println("**************************************************")
